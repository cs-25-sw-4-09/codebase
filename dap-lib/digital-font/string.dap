import ZERO "./dap-lib/digital-font/letters/0.dap";
import ONE "./dap-lib/digital-font/letters/1.dap";
import TWO "./dap-lib/digital-font/letters/2.dap";
import THREE "./dap-lib/digital-font/letters/3.dap";
import FOUR "./dap-lib/digital-font/letters/4.dap";
import FIVE "./dap-lib/digital-font/letters/5.dap";
import SIX "./dap-lib/digital-font/letters/6.dap";
import NINE "./dap-lib/digital-font/letters/9.dap";
import COMMA "./dap-lib/digital-font/letters/COMMA.dap";
import LEFTPAREN "./dap-lib/digital-font/letters/LEFTPAREN.dap";
import RIGHTPAREN "./dap-lib/digital-font/letters/RIGHTPAREN.dap";
import A "./dap-lib/digital-font/letters/A.dap";
import B "./dap-lib/digital-font/letters/B.dap";
import C "./dap-lib/digital-font/letters/C.dap";
import D "./dap-lib/digital-font/letters/D.dap";
import E "./dap-lib/digital-font/letters/E.dap";
import F "./dap-lib/digital-font/letters/F.dap";
import G "./dap-lib/digital-font/letters/G.dap";
import H "./dap-lib/digital-font/letters/H.dap";
import I "./dap-lib/digital-font/letters/I.dap";
import J "./dap-lib/digital-font/letters/J.dap";
import K "./dap-lib/digital-font/letters/K.dap";
import L "./dap-lib/digital-font/letters/L.dap";
import M "./dap-lib/digital-font/letters/M.dap";
import N "./dap-lib/digital-font/letters/N.dap";
import O "./dap-lib/digital-font/letters/O.dap";
import P "./dap-lib/digital-font/letters/P.dap";
import Q "./dap-lib/digital-font/letters/Q.dap";
import R "./dap-lib/digital-font/letters/R.dap";
import S "./dap-lib/digital-font/letters/S.dap";
import T "./dap-lib/digital-font/letters/T.dap";
import U "./dap-lib/digital-font/letters/U.dap";
import V "./dap-lib/digital-font/letters/V.dap";
import W "./dap-lib/digital-font/letters/W.dap";
import X "./dap-lib/digital-font/letters/X.dap";
import Y "./dap-lib/digital-font/letters/Y.dap";
import Z "./dap-lib/digital-font/letters/Z.dap";

import col "./dap-lib/digital-font/letters/rowmaker.dap";

string: int[] = [
  68, 82, 65, 87,    // D R A W
  32,               // space
  65, 83,           // A S
  32,               // space
  80, 82, 79, 71, 82, 65, 77, 77, 69, 82  // P R O G R A M M E R
];
/*string: int[] = [
  65, 67, 67, 69, 80, 84, 65, 78, 67, 69, 32, 84, 69, 83, 84
];*/


main_color: color = (0,0,100,255);
background_color: color = (0,0,0,0);
scale_size:int = 1;


// SRC: https://suncatcherstudio.com/lettering-fonts/cross-stitch-letters/
begin

space_blocks: bool[] = [false];
space: shape = place col(|blocks = space_blocks|) right (2,0) offset col(|blocks = space_blocks|);

letter_string: shape = (0,0)--(0,0)(||);
    for cur in 0 to string.size {
        fork {
        (string[cur] == 0) -> {letter_string = place ZERO(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 1) -> {letter_string = place ONE(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 2) -> {letter_string = place TWO(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 3) -> {letter_string = place THREE(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 4) -> {letter_string = place FOUR(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 5) -> {letter_string = place FIVE(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 6) -> {letter_string = place SIX(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 9) -> {letter_string = place NINE(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 40) -> {letter_string = place LEFTPAREN(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 41) -> {letter_string = place RIGHTPAREN(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 44) -> {letter_string = place COMMA(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 65) -> {letter_string = place A(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 66) -> {letter_string = place B(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 67) -> {letter_string = place C(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 68) -> {letter_string = place D(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 69) -> {letter_string = place E(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 70) -> {letter_string = place F(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 71) -> {letter_string = place G(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 72) -> {letter_string = place H(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 73) -> {letter_string = place I(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 74) -> {letter_string = place J(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 75) -> {letter_string = place K(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 76) -> {letter_string = place L(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 77) -> {letter_string = place M(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 78) -> {letter_string = place N(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 79) -> {letter_string = place O(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 80) -> {letter_string = place P(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 81) -> {letter_string = place Q(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 82) -> {letter_string = place R(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 83) -> {letter_string = place S(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 84) -> {letter_string = place T(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 85) -> {letter_string = place U(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 86) -> {letter_string = place V(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 87) -> {letter_string = place W(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 88) -> {letter_string = place X(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 89) -> {letter_string = place Y(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (string[cur] == 90) -> {letter_string = place Z(|main_color = main_color, background_color = background_color|) right (1,0) offset letter_string;}
        (otherwise) -> {letter_string = place space right letter_string;}
    }
}

draw scale letter_string by scale_size;